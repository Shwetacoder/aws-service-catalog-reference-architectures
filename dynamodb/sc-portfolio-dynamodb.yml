AWSTemplateFormatVersion: "2010-09-09"

Description: DynamoDB Portfolio for Service Catalog. (fdp-1qj64b3hb)

Parameters:
  PortfolioProvider:
    Type: String
    Description: Provider Name
    Default: IT Services
  PortfolioName:
    Type: String
    Description: Portfolio Name
    Default: Service Catalog DynamoDB Reference Architecture
  PortfolioDescription:
    Type: String
    Description: Portfolio Description
    Default: Service Catalog Portfolio that contains products for Amazon DynamoDB
  LaunchRoleName:
    Type: String
    Description: Name of the launch constraint role for DynamoDB products. leave this blank to create the role
  LinkedRole:
    Type: String
    Description: (Optional) The name of a role which can execute products in this portfolio
  RepoRootURL:
    Type: String
    Description: Root url for the repo containing the product templates
    Default: https://s3.amazonaws.com/aws-service-catalog-reference-architectures/
  CreateEndUsersGroup:
    Type: String
    Description: Select Yes to Create the ServiceCatalogEndusers IAM group. No if you have already created the group
    AllowedValues:
      - Yes
      - No
    Default: No

Conditions:
  CreateLaunchConstraint: !Equals [!Ref LaunchRoleName, ""]
  CondLinkRole: !Not
    - !Equals [!Ref LinkedRole, ""]
  CondCreateEndUsersGroup: !Equals
    - !Ref CreateEndUsersGroup
    - Yes

Resources:
  SCDynamoDBportfolio:
    Type: AWS::ServiceCatalog::Portfolio
    Properties:
      ProviderName: !Ref PortfolioProvider
      Description: !Ref PortfolioDescription
      DisplayName: !Ref PortfolioName

  Addrole:
    Type: AWS::ServiceCatalog::PortfolioPrincipalAssociation
    Condition: CondLinkRole
    Properties:
      PrincipalARN: !Sub arn:aws:iam::${AWS::AccountId}:role/${LinkedRole}
      PortfolioId: !Ref SCDynamoDBportfolio
      PrincipalType: IAM

  StackServiceCatalogEndusers:
    Type: AWS::CloudFormation::Stack
    Condition: CondCreateEndUsersGroup
    Properties:
      TemplateURL: !Sub ${RepoRootURL}iam/sc-enduser-iam.yml
      TimeoutInMinutes: 5

  LinkEndusersRole:
    Type: AWS::ServiceCatalog::PortfolioPrincipalAssociation
    Condition: CondCreateEndUsersGroup
    Properties:
      PrincipalARN: !GetAtt ["StackServiceCatalogEndusers", "Outputs.EndUserRoleArn"]
      PortfolioId: !Ref SCDynamoDBportfolio
      PrincipalType: IAM

  LinkEndusersGroup:
    Type: AWS::ServiceCatalog::PortfolioPrincipalAssociation
    Condition: CondCreateEndUsersGroup
    Properties:
      PrincipalARN: !GetAtt ["StackServiceCatalogEndusers", "Outputs.EndUserGroupArn"]
      PortfolioId: !Ref SCDynamoDBportfolio
      PrincipalType: "IAM"

  LaunchConstraintRole:
    Type: AWS::CloudFormation::Stack
    Condition: CreateLaunchConstraint
    Properties:
      TemplateURL: !Sub ${RepoRootURL}iam/sc-dynamodb-launchrole.yml
      TimeoutInMinutes: 5

  DynamoDBStandardProduct:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        PortfolioProvider: !Ref PortfolioProvider
        LaunchConstraintARN: !If
          - CreateLaunchConstraint
          - !GetAtt ["LaunchConstraintRole", "Outputs.LaunchRoleArn"]
          - !Sub arn:aws:iam::${AWS::AccountId}:role/${LaunchRoleName}
        PortfolioId: !Ref SCDynamoDBportfolio
        RepoRootURL: !Ref RepoRootURL
      TemplateURL: !Sub ${RepoRootURL}dynamodb/sc-product-dynamodb.yml
      TimeoutInMinutes: 5
