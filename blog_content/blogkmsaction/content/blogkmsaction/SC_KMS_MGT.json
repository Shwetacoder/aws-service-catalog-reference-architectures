{
    "description": "Manage KMS instances(s)",
    "schemaVersion": "0.3",
    "assumeRole": "{{AutomationAssumeRole}}",
    "parameters": {
        "KeyId": {
            "type": "String",
            "description": "KMS KeyId format 623e69ae-xxxx-48bf-91bf-e8e20eb4612d",
            "default": ""
        },
        "AutomationAssumeRole": {
            "type": "String",
            "description": "AutomationAssumeRole",
            "default": "{{AutomationAssumeRole}}"
        },
       "QueueUserArn": {
            "type": "String",
            "description": "QueueUserArn Additional userArn to Add",
            "default": ""
        }
    },
    "mainSteps": [
        {
            "name": "getKeyPolicy",
            "action": "aws:executeAwsApi",
            "inputs": {
                "Service": "kms",
                "Api": "GetKeyPolicy",
                "KeyId": "{{KeyId}}",
                "PolicyName": "default"
            },
            "outputs": [
                {
                    "Name": "Policy",
                    "Type": "String",
                    "Selector": "$.Policy"
                }
            ]
        },
        {
            "name": "PutPolicy",
            "action": "aws:executeScript",
            "timeoutSeconds": 45,
            "onFailure": "Abort",
            "inputs": {
                "Runtime": "python3.6",
                "Handler": "putPolicy",
                "InputPayload": {
                    "KeyId": "{{KeyId}}",
                    "PolicyName": "default",
                    "OldPolicy": "{{getKeyPolicy.Policy}}",
                    "newUserArn": "{{QueueUserArn}}",
                    "sqsQueName": "test"
                },
                "Script": "def putPolicy(events,context):\n  import boto3\n  import json\n  #Initialize client\n  kms_client = boto3.client('kms')\n  ssm_client = boto3.client('ssm')\n  _pname     = '/scqueue-%s' % events['KeyId']\n  print(_pname)\n  sqsQueName = ssm_client.get_parameter(Name=_pname)['Parameter']['Value'] \n  NewPolicy  = '[{\"Sid\": \"Key Usage\",\"Effect\": \"Allow\",\"Principal\": {\"AWS\": \"%s\"},\"Action\": [\"kms:Encrypt\",\"kms:Decrypt\"],\"Resource\": \"%s\"},' % (events['newUserArn'],sqsQueName)\n  NewPolicy1=events['OldPolicy'].replace('[',NewPolicy)\n  return { 'NewPolicy' : NewPolicy1 }"
            },
            "outputs": [
                {
                    "Name": "Payload",
                    "Selector": "$.Payload",
                    "Type": "StringMap"
                },
                {
                    "Name": "NewPolicy",
                    "Selector": "$.Payload.NewPolicy",
                    "Type": "String"
                }
            ]
        },
        {
            "name": "PutKeyPolicy",
            "action": "aws:executeAwsApi",
            "inputs": {
                "Service": "kms",
                "Api": "PutKeyPolicy",
                "KeyId": "{{KeyId}}",
                "PolicyName": "default",
                "Policy": "{{ PutPolicy.NewPolicy }}"
            },
            "outputs": [
                {
                    "Name": "Policy",
                    "Type": "String",
                    "Selector": "$.Policy"
                }
            ],
            "isEnd": "True"
        }
    ]
}